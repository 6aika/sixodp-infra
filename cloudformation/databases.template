AWSTemplateFormatVersion: "2010-09-09"
Description: sixodp databases

Parameters:
  EnvironmentName:
    Type: String
    Default: infratest
    AllowedValues:
      - infratest
      - generic-dev
      - generic-qa
      - generic-prod
      - turku-qa
      - tampere-qa
      - tampere
  DatabaseSubnets:
    Description: Database and EFS mount target subnets
    Type: List<AWS::EC2::Subnet::Id>
  CKANAdminUsername:
    Description: CKAN database admin username
    Type: String
    MinLength: 1
    Default: ckan_admin
  CKANAdminPassword:
    Description: CKAN database admin password
    Type: String
    NoEcho: true
    MinLength: 8
  WPAdminUsername:
    Description: Wordpress database admin username
    Type: String
    MinLength: 1
    Default: wordpress
  WPAdminPassword:
    Description: Wordpress database admin password
    Type: String
    NoEcho: true
    MinLength: 8
Resources:
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 50
      Engine: postgres
      BackupRetentionPeriod: 7
      DBInstanceClass: db.t3.small
      MultiAZ: false
      StorageType: gp2
      DBInstanceIdentifier: !Sub sixodp-${EnvironmentName}-ckan
      MasterUsername: !Ref CKANAdminUsername
      MasterUserPassword: !Ref CKANAdminPassword
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      VPCSecurityGroups:
        - !GetAtt DatabaseSecurityGroup.GroupId

  MySQLRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 50
      Engine: mysql
      BackupRetentionPeriod: 7
      DBInstanceClass: db.t3.small
      MultiAZ: false
      StorageType: gp2
      DBInstanceIdentifier: !Sub sixodp-${EnvironmentName}-wordpress
      MasterUsername: !Ref WPAdminUsername
      MasterUserPassword: !Ref WPAdminPassword
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      VPCSecurityGroups:
        - !GetAtt DatabaseSecurityGroup.GroupId

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable DB access

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for databases
      SubnetIds: !Ref DatabaseSubnets

  DatasetBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub sixodp-${EnvironmentName}-datasets
      AccessControl: PublicRead
      VersioningConfiguration:
          Status: Enabled

  DatasetBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DatasetBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${DatasetBucket}/*"
            Principal: "*"

  EFSFileSystem:
    Type: AWS::EFS::FileSystem

  EFSMountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SecurityGroups:
        - !GetAtt EFSSecurityGroup.GroupId
      SubnetId: !Select [0, !Ref DatabaseSubnets]

  EFSMountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SecurityGroups:
        - !GetAtt EFSSecurityGroup.GroupId
      SubnetId: !Select [1, !Ref DatabaseSubnets]

  EFSMountTarget3:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SecurityGroups:
        - !GetAtt EFSSecurityGroup.GroupId
      SubnetId: !Select [2, !Ref DatabaseSubnets]

  EFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable EFS access

Outputs:
  DatabaseSecurityGroup:
    Value: !Ref DatabaseSecurityGroup
  DatasetBucket:
    Value: !Ref DatasetBucket
